
@{
    ViewBag.Title = "Adjusment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="~/Content/jtable240/themes/lightcolor/blue/jtable.min.css" />
}
<div class="page-header">
    <h1>
        Adjustment
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            overview &amp; stats
        </small>
    </h1>
</div><!-- /.page-header -->

<div class="col-xs-12">
    <!-- PAGE CONTENT BEGINS -->
    <div class="alert alert-block alert-success">
        <button type="button" class="close" data-dismiss="alert">
            <i class="ace-icon fa fa-times"></i>
        </button>

        <i class="ace-icon fa fa-check green"></i>

        <strong class="green">
            Dashboard Pajak Online
            <small>(v1.0)</small>
        </strong>,
        Laman ini memuat adjusment
    </div>


    <div class="row">
        <div class="col-xs-12">
            <div class="page-header">
            </div><!-- /.page-header -->
            <div class="row">
                <div class="col-xs-12">
                    <div class="widget-body table-responsive">
                        <div class="widget-main">
                            <div id="fuelux-wizard-container">
                                <div class="table-responsive">
                                    <ul class="steps">
                                        <li data-step="1" class="active">
                                            <span class="step">1</span>
                                            <span class="title">Record Result</span>
                                        </li>
                                        <li data-step="2">
                                            <span class="step">2</span>
                                            <span class="title">Manual Adjust</span>
                                        </li>
                                        <li data-step="3">
                                            <span class="step">3</span>
                                            <span class="title">File Adjust</span>
                                        </li>

                                        <li data-step="4">
                                            <span class="step">4</span>
                                            <span class="title">Choose payment</span>
                                        </li>
                                    </ul>
                                </div>
                                <hr />
                                <div class="step-content pos-rel">
                                    <div class="step-pane active" data-step="1">
                                        <div class="row">
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <label for="noktp" class="col-md-2 control-label">
                                                        NOP
                                                        <span class='require'>*</span>
                                                    </label>
                                                    <div class="col-md-5">
                                                        @{
                                                            string role = Session["Nama_Role"].ToString();
                                                            if (string.Compare(role, "USER") == 0)
                                                            {
                                                                <select id="nop" name="nop" class="form-control"></select>
                                                            }
                                                            else
                                                            {
                                                                <input type="text" id="nop" class="form-control" />
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="month" class="col-md-2 control-label">
                                                        Bulan
                                                        <span class='require'>*</span>
                                                    </label>
                                                    <div class="col-md-4">
                                                        <select id="month" class="form-control"></select>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="year" class="col-md-2 control-label">
                                                        Tahun
                                                        <span class='require'>*</span>
                                                    </label>
                                                    <div class="col-md-4">
                                                        <select id="year" class="form-control"></select>
                                                    </div>
                                                </div>
                                                <div class="form-actions text-right pal">
                                                    <input type="button" id="btnFilter" class="btn btn-sm btn-success" value="Search" />
                                                </div>
                                            </form>
                                        </div>

                                        <div id="TableTransactionContainer"></div>
                                    </div>
                                    <div class="step-pane" data-step="2">
                                        <div>
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Tanggal</label>
                                                    <div class="col-md-8">
                                                        <div class='input-group date'>
                                                            <input type='text' class="form-control" id='dateAdjusment' />
                                                            <span id="errDateAd" class="red" hidden></span>
                                                            <span class="input-group-addon">
                                                                <span class="fa fa-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Nominal</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="nominal" class="form-control" />
                                                        <span id="errNominal" class="red" hidden></span>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label">Keterangan</label>
                                                    <div class="col-md-8">
                                                        <textarea id="keterangan" class="form-control"></textarea>
                                                        <span id="errKeterangan" class="red" hidden></span>
                                                    </div>
                                                </div>
                                                <div class="form-actions text-right pal">
                                                    <input type="button" id="btnSaveTempAdjustment" onclick="CheckForm();" class="btn btn-sm btn-success" value="Save" />
                                                </div>
                                            </form>
                                        </div>
                                        <div id="TableResultAdjusmentContainer"></div>
                                    </div>
                                    <div class="step-pane" data-step="3">
                                        <div class="center">
                                            <form class="form-horizontal">
                                                <div class="form-group">
                                                    <div class="col-xs-12">
                                                        <input multiple="" type="file" id="id-input-file-3" accept="application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="step-pane" data-step="4">
                                        <div id="TableResultAdjusmentContainer2"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="wizard-actions">
                                <button class="btn btn-prev">
                                    <i class="ace-icon fa fa-arrow-left"></i>
                                    Prev
                                </button>

                                <button class="btn btn-success btn-next" data-last="Finish">
                                    Next
                                    <i class="ace-icon fa fa-arrow-right icon-on-right"></i>
                                </button>
                            </div>
                        </div><!-- /.widget-main -->
                    </div><!-- /.widget-body -->
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Content/js/wizard.min.js"></script>
    <script src="~/Content/js/jquery.validate.min.js"></script>
    <script src="~/Content/js/jquery-additional-methods.min.js"></script>
    <script src="~/Content/js/bootbox.js"></script>
    <script src="~/Content/js/jquery.maskedinput.min.js"></script>
    <script type="text/javascript" src="~/Content/jtable240/jquery.jtable.js"></script>
    <script type="text/javascript">
        var isAllowedStep2 = false;
        var isAllowedStep3 = false;
        var isAllowedStep4 = false;
        $(document).ready(function () {
            $('#dateAdjusment').datepicker();
            var file_input = $('#id-input-file-3');
            var whitelist_ext = ["pdf", "xls", "xlsx"];
            var whitelist_mime = ["application/pdf", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"];
            file_input.ace_file_input('update_settings',
                {
                    'allowExt': whitelist_ext,
                    'allowMime': whitelist_mime
                })

            $.ajax({
                url: '/User/FindNopUserApp',
                type: 'POST',
                dataType: 'JSON',
                success: function (e) {
                    if (e != undefined && e != null) {
                        var optionNop = $("select#nop");
                        for (var iNop = 0; iNop < e.resultDetail.length; iNop++) {
                            var maxLength = 80;
                            var textValue = e.resultDetail[iNop].nop + " - " + e.resultDetail[iNop].Nama_Obyek;
                            if (textValue.length > maxLength) {
                                textValue = textValue.substr(0, 65) + "...";
                            }
                            optionNop.append($("<option />").val(e.resultDetail[iNop].nop).text(textValue));
                        }
                        //for (var iNop = 0; iNop < e.resultDetail.length; iNop++) {
                        //    optionNop.append($("<option />").val(e.resultDetail[iNop].nop).text(e.resultDetail[iNop].nop));
                        //}
                    }
                }
            });

            $('#btnFilter').click(function () {
                var nop = $('#nop').val();
                var month = $('#month').val();
                var year = $('#year').val();
                $('#TableTransactionContainer').jtable('load', { nop: nop, month: month, year: year });
            });

            $.ajax({
                url: '/User/GetListMonth',
                type: 'POST',
                dataType: 'JSON',
                success: function (e) {
                    var optionsMonth = $("#month");
                    for (var iMonth = 0; iMonth < e.monthValue.length; iMonth++) {
                        optionsMonth.append($("<option />").val(e.monthValue[iMonth]).text(e.monthName[iMonth]));
                    }

                    var optionsYear = $("#year");
                    for (var iYear = 0; iYear < e.years.length; iYear++) {
                        optionsYear.append($("<option />").val(e.years[iYear]).text(e.years[iYear]));
                    }

                }
            });

            $('#TableResultAdjusmentContainer').jtable({
                title: 'Result Adjusment List',
                paging: true, //Enable paging
                sorting: true, //Enable sorting
                defaultSorting: 'Name ASC',
                actions: {
                    listAction: '/User/ResultAdjusment',
                    deleteAction: function (postData) {
                        return $.Deferred(function ($dfd) {
                            $.ajax({
                                url: '/User/DeleteResultAdjusment',
                                data: postData,
                                type: 'POST',
                                dataType: 'JSON',
                                success: function (data) {
                                    $dfd.resolve(data);
                                },
                                error: function () {
                                    $dfd.reject();
                                }
                            });
                        });
                    }
                },
                fields: {
                    date: {
                        title: 'Tanggal',
                        key: true
                    },
                    nominal: {
                        title: 'Nominal'
                    },
                    keterangan: {
                        title: 'Keterangan'
                    }
                },
                recordsLoaded: function (event, data) {
                    if (data.serverResponse.TotalRecordCount != 0) {
                        isAllowedStep3 = true;
                    }
                    else {
                        isAllowedStep3 = false;
                    }
                }
            });

            $('#TableResultAdjusmentContainer2').jtable({
                title: 'Result Adjusment List',
                paging: true, //Enable paging
                sorting: true, //Enable sorting
                defaultSorting: 'Name ASC',
                actions: {
                    listAction: '/User/FinalResultAdjusment'
                },
                fields: {
                    date: {
                        title: 'Tanggal'
                    },
                    nominal: {
                        title: 'Nominal'
                    },
                    keterangan: {
                        title: 'Keterangan'
                    }
                }
            });

            $('#TableTransactionContainer').jtable({
                title: 'Transaction List',
                paging: true, //Enable paging
                sorting: true, //Enable sorting
                defaultSorting: 'Name ASC',
                actions: {
                    listAction: '/User/TransactionList'
                },
                fields: {
                    //Detail: {
                    //    title: '',
                    //    width: '5%',
                    //    sorting: false,
                    //    edit: false,
                    //    create: false,
                    //    display: function (transData) {
                    //        //Create an image that will be used to open child table
                    //        var $img = $('<img height="42" width="42" src="/Content/images/detail.png" title="Detail Transactions" />');
                    //        //Open child table when user clicks the image
                    //        $img.click(function () {
                    //            $('#TableTransactionContainer').jtable('openChildTable',
                    //                $img.closest('tr'),
                    //                {
                    //                    title: transData.record.Username + ' - Transaction',
                    //                    paging: true,
                    //                    actions: {
                    //                        listAction: '/User/TransactionDetailList?date=' + transData.record.StrTanggal
                    //                    },
                    //                    fields: {
                    //                        Record_Data: {
                    //                            title: 'Data',
                    //                            display: function (e) {
                    //                                if (transData.record.Is_Adjusment) {
                    //                                    return 'Already Adjust'
                    //                                }
                    //                            }
                    //                        }
                    //                    },
                    //                }, function (data) { //opened handler
                    //                    data.childTable.jtable('load');
                    //                });
                    //        });
                    //        //Return image to show on the person row
                    //        return $img;
                    //    }
                    //},
                    Username: {
                        title: 'Username',
                        list : false
                    },
                    StrTanggal: {
                        title: 'Tanggal'
                    },
                    strPajak_Terutang: {
                        title: 'Pajak Terutang',
                        listClass: "right"
                    },
                    Keterangan: {
                        title: 'Keterangan'
                    },
                    Is_Adjusment: {
                        title: 'Is Adjustment',
                        display: function (e) {
                            if (e.record.Is_Adjusment) {
                                return 'Yes'
                            } else {
                                return 'No'
                            }
                        }
                    },
                    CreateDate: {
                        title: 'Create Date',
                        type: 'date',
                        displayFormat: 'yy-mm-dd'
                    },
                    Ip_Sender: {
                        title: 'IP Sender'
                    },
                },
                recordsLoaded: function (event, data) {
                    if (data.serverResponse.TotalRecordCount != 0) {
                        isAllowedStep2 = true;
                    }
                    else {
                        isAllowedStep2 = false;
                    }
                },
            })
        });
        var fileValue = "";
        $('#id-input-file-3').ace_file_input({
            style: 'well',
            btn_choose: 'Drop files here or click to choose',
            btn_change: null,
            no_icon: 'ace-icon fa fa-cloud-upload',
            droppable: true,
            thumbnail: 'small',
            preview_error: function (filename, error_code) {
            }

        }).on('change', function () {
            var value = [];
            for (var i = 0; i < $(this).get(0).files.length; ++i) {
                value.push($(this).get(0).files[i]);
                var stringJson = JSON.stringify(value);
                fileValue = stringJson;
            }
            if (fileValue != null) {
                isAllowedStep4 = true;
            } else {
                isAllowedStep4 = false;
            }
        });

        //$('form#form-horizontal').find('a').click(function () {
        //    debugger;
        //    fileValue = null;
        //    isAllowedStep4 = false;
        //});

        $("#keterangan").change(function () {
            if ($("#keterangan").val() != "") {
                $("#errKeterangan").attr("hidden", "hidden");
            } else {
                $("#errKeterangan").removeAttr("hidden").text("Keterangan harus diisi");
            }
        });

        $("#dateAdjusment").change(function () {
            if ($("#dateAdjusment").val() != "") {
                $("#errDateAd").attr("hidden", "hidden");
            } else {
                $("#errDateAd").removeAttr("hidden").text("Tanggal harus diisi");
            }
        });

        $("#nominal").change(function () {
            if ($("#nominal").val() != "") {
                $("#errNominal").attr("hidden", "hidden");
            } else {
                $("#errNominal").removeAttr("hidden").text("Nominal harus diisi");
            }
        });

        function CheckForm() {
            var nop = $('#nop').val();
            var date = $('#dateAdjusment').val();
            var nominal = $('#nominal').val();
            var keterangan = $('#keterangan').val();
            var isComplete = false
            if (date == "" || date == null) {
                isComplete = false;
                $("#errDateAd").removeAttr("hidden").text("Tanggal harus diisi");
            } else {
                isComplete = true;
                $("#errDateAd").attr("hidden", "hidden");
            }

            if (nominal == "" || nominal == null) {
                isComplete = false;
                $("#errNominal").removeAttr("hidden").text("Nominal harus diisi");
            } else {
                isComplete = true;
                $("#errNominal").attr("hidden", "hidden");
            }

            if (keterangan == "" || keterangan == null) {
                isComplete = false;
                $("#errKeterangan").removeAttr("hidden").text("Keterangan harus diisi");
            } else {
                isComplete = true;
                $("#errKeterangan").attr("hidden", "hidden");
            }
            if (isComplete) {
                SaveTempAdjusment(nop, date, nominal, keterangan);
            }
        }

        function SaveTempAdjusment(nop, date, nominal, keterangan) {
            $.ajax({
                url: "/User/SaveTempAdjusment",
                data: { nop: nop, date: date, nominal: nominal, keterangan: keterangan },
                type: 'POST',
                dataType: 'JSON',
                success: function (e) {
                    if (e != undefined && e != null) {
                        if (e.isSave) {
                            $('#TableResultAdjusmentContainer').jtable('load');
                        } else {
                            swal(
                                e.isError
                            )
                            e.preventDefault();
                        }
                    } else {
                        e.preventDefault();
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        jQuery(function ($) {
            $('[data-rel=tooltip]').tooltip();
            var $validation = false;
            $('#fuelux-wizard-container')
                .ace_wizard({
                })
                .on('actionclicked.fu.wizard', function (e, info) {
                    if (info.step == 1) {
                        if (!isAllowedStep2) {
                            swal(
                                'Oops...',
                                'Data Not Found!',
                                'error'
                            )
                            e.preventDefault();
                        }
                        else {
                            var selectedYear = $('#year').val();
                            var selectedMonth = $('#month').val();
                            $('#dateAdjusment').datepicker('option', {
                                format: 'dd/MM/yyyy',
                                minDate: new Date(parseInt(selectedYear), parseInt(selectedMonth) - 1),
                                maxDate: new Date(parseInt(selectedYear), parseInt(selectedMonth), -0),
                            });
                        }
                    }

                    if (info.step == 2 && !isAllowedStep3) {
                        swal(
                            'Oops...',
                            'Data Not Found!',
                            'error'
                        )
                        e.preventDefault();
                    }
                    if (info.step == 3) {
                        if (!isAllowedStep4) {
                            swal(
                                'Oops...',
                                'File must filled!',
                                'error'
                            )
                            e.preventDefault();
                        } else {
                            $('#TableResultAdjusmentContainer2').jtable('load');
                        }
                    }
                })
                .on('finished.fu.wizard', function (e) {
                    $.ajax({
                        url: '/User/SaveAdjusment',
                        data: { file: fileValue },
                        type: 'POST',
                        dataType: 'JSON',
                        success: function (e) {
                            if (e != undefined && e != null) {
                                if (e.isSave) {
                                    bootbox.dialog({
                                        message: "Thank you! Your information was successfully saved!",
                                        buttons: {
                                            "success": {
                                                "label": "OK",
                                                "className": "btn-sm btn-primary",
                                                "callback": function () {
                                                    window.location.reload();
                                                }
                                            }
                                        },
                                        onEscape: function () {
                                            location.reload(true);
                                        }
                                    });
                                } else {
                                    swal(
                                        'Oops...',
                                        'Adjustment failed to save!',
                                        'error'
                                    )
                                    e.preventDefault();
                                }
                            }
                        }
                    });
                }).on('stepclick.fu.wizard', function (e) {
                    //e.preventDefault();//this will prevent clicking and selecting steps
                });
            $('#skip-validation').removeAttr('checked').on('click', function () {
                $validation = this.checked;
                if (this.checked) {
                    $('#sample-form').hide();
                    $('#validation-form').removeClass('hide');
                }
                else {
                    $('#validation-form').addClass('hide');
                    $('#sample-form').show();
                }
            })
            $.mask.definitions['~'] = '[+-]';
            $('#phone').mask('(999) 999-9999');
            jQuery.validator.addMethod("phone", function (value, element) {
                return this.optional(element) || /^\(\d{3}\) \d{3}\-\d{4}( x\d{1,6})?$/.test(value);
            }, "Enter a valid phone number.");
            $('#validation-form').validate({
                errorElement: 'div',
                errorClass: 'help-block',
                focusInvalid: false,
                ignore: "",
                rules: {
                    dateAdjusment: {
                        required: true
                    },
                    nominal: {
                        required: true
                    },
                    keterangan: {
                        required: true
                    }
                },

                messages: {
                    dateAdjusment: {
                        required: "tanggal adjusment harus diisi."
                    },
                    nominal: {
                        required: "nominal harus diisi."
                    },
                    keterangan: "Mohon isi keterangan",
                },


                highlight: function (e) {
                    $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                },

                success: function (e) {
                    $(e).closest('.form-group').removeClass('has-error');//.addClass('has-info');
                    $(e).remove();
                },

                errorPlacement: function (error, element) {
                    if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                        var controls = element.closest('div[class*="col-"]');
                        if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                        else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                    }
                    else if (element.is('.select2')) {
                        error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                    }
                    else if (element.is('.chosen-select')) {
                        error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                    }
                    else error.insertAfter(element.parent());
                },

                submitHandler: function (form) {
                },
                invalidHandler: function (form) {
                }
            });
            $('#modal-wizard-container').ace_wizard();
            $('#modal-wizard .wizard-actions .btn[data-dismiss=modal]').removeAttr('disabled');

            $(document).one('ajaxloadstart.page', function (e) {
                $('[class*=select2]').remove();
            });
        })
    </script>
}
